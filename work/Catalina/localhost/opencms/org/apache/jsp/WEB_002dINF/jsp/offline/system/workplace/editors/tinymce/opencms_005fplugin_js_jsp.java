/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.27
 * Generated at: 2015-01-20 04:45:02 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.jsp.offline.system.workplace.editors.tinymce;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import org.opencms.i18n.CmsEncoder;
import org.opencms.jsp.*;
import org.opencms.workplace.editors.*;
import org.opencms.workplace.galleries.*;
import org.opencms.main.*;
import org.opencms.workplace.*;
import org.opencms.editors.tinymce.*;
import java.util.*;
import org.opencms.file.types.CmsResourceTypeImage;

public final class opencms_005fplugin_js_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(1);
    _jspx_dependants.put("/WEB-INF/opencms.tld", Long.valueOf(1414568902000L));
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005ffmt_005fsetLocale_0026_005fvalue_005fnobody;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005ffmt_005fbundle_0026_005fbasename;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fcms_005flink;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005ffmt_005fsetLocale_0026_005fvalue_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005ffmt_005fbundle_0026_005fbasename = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fcms_005flink = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005ffmt_005fsetLocale_0026_005fvalue_005fnobody.release();
    _005fjspx_005ftagPool_005ffmt_005fbundle_0026_005fbasename.release();
    _005fjspx_005ftagPool_005fcms_005flink.release();
    _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;



 
    CmsJspActionElement cms = new CmsJspActionElement(pageContext, request, response); 
   pageContext.setAttribute("cms", cms);
   Locale locale=OpenCms.getWorkplaceManager().getWorkplaceLocale(cms.getCmsObject());
   pageContext.setAttribute("locale", locale.toString());
    String itemResType = CmsResourceTypeImage.getStaticTypeName();
    CmsEditorDisplayOptions options = OpenCms.getWorkplaceManager().getEditorDisplayOptions();
Properties displayOptions = options.getDisplayOptions(cms);
String encoding = CmsEncoder.ENCODING_US_ASCII;


      if (_jspx_meth_fmt_005fsetLocale_005f0(_jspx_page_context))
        return;
      out.write('\r');
      out.write('\n');
      //  fmt:bundle
      org.apache.taglibs.standard.tag.rt.fmt.BundleTag _jspx_th_fmt_005fbundle_005f0 = (org.apache.taglibs.standard.tag.rt.fmt.BundleTag) _005fjspx_005ftagPool_005ffmt_005fbundle_0026_005fbasename.get(org.apache.taglibs.standard.tag.rt.fmt.BundleTag.class);
      _jspx_th_fmt_005fbundle_005f0.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fbundle_005f0.setParent(null);
      // /WEB-INF/jsp/offline/system/workplace/editors/tinymce/opencms_plugin.js.jsp(22,0) name = basename type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fbundle_005f0.setBasename("org.opencms.ade.galleries.messages");
      int _jspx_eval_fmt_005fbundle_005f0 = _jspx_th_fmt_005fbundle_005f0.doStartTag();
      if (_jspx_eval_fmt_005fbundle_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        if (_jspx_eval_fmt_005fbundle_005f0 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
          out = _jspx_page_context.pushBody();
          _jspx_th_fmt_005fbundle_005f0.setBodyContent((javax.servlet.jsp.tagext.BodyContent) out);
          _jspx_th_fmt_005fbundle_005f0.doInitBody();
        }
        do {
          out.write("\r\n");
          out.write("\r\n");
          out.write("function initOpenCmsTinyMCEPlugin() {\r\n");
          out.write("   if (tinymce['opencms']) return; \r\n");
          out.write("\r\n");
          out.write("var workplacePath=\"");
          out.print( cms.link("/system/workplace/") );
          out.write("\";\r\n");
          out.write("\r\n");
          out.write("/**\r\n");
          out.write(" * Opens the image gallery popup.\r\n");
          out.write(" */\r\n");
          out.write("function doShowCmsGalleries(editor, url) {\r\n");
          out.write("   var width = window.innerWidth;\r\n");
          out.write("   var height = window.innerHeight;\r\n");
          out.write("   // HACK: check for IE8 and add some attributes to iframe to prevent layout issues\r\n");
          out.write("   if (typeof document.addEventListener =='undefined'){\r\n");
          out.write("       // let's call this iframe attribute injection\r\n");
          out.write("       url+=\"\\\" allowtransparency=\\\"true\\\" scrolling=\\\"no\\\" frameborder=\\\"0\\\" framespacing=\\\"0\"\r\n");
          out.write("   }\r\n");
          out.write("   editor.windowManager.open({\r\n");
          out.write("       url: url, \r\n");
          out.write("       width : width, \r\n");
          out.write("       height: height, \r\n");
          out.write("       inline: \"yes\", \r\n");
          out.write("       classes: \"opencmsDialog\"\r\n");
          out.write("   }, {});\r\n");
          out.write("}\r\n");
          out.write("\r\n");
          out.write("/**\r\n");
          out.write(" * Searches for a frame by the specified name. Will only return siblings or ancestors.<p>\r\n");
          out.write(" * \r\n");
          out.write(" * @return <code>Frame</code> the frame or <code>null</code> if no matching frame is found\r\n");
          out.write(" */ \r\n");
          out.write("function findFrame(startFrame, frameName){\r\n");
          out.write("    if (startFrame == top){\r\n");
          out.write("        // there may be security restrictions prohibiting access to the frame name\r\n");
          out.write("        try{\r\n");
          out.write("            if (startFrame.name == frameName){\r\n");
          out.write("                return startFrame;\r\n");
          out.write("            }\r\n");
          out.write("        }catch(err){}\r\n");
          out.write("        return null;\r\n");
          out.write("    }\r\n");
          out.write("    for (var i=0; i<startFrame.parent.frames.length; i++){\r\n");
          out.write("        // there may be security restrictions prohibiting access to the frame name\r\n");
          out.write("        try{\r\n");
          out.write("            if (startFrame.parent.frames[i].name == frameName) {\r\n");
          out.write("                return startFrame.parent.frames[i];\r\n");
          out.write("            }\r\n");
          out.write("        }catch(err){}\r\n");
          out.write("    }\r\n");
          out.write("    return findFrame(startFrame.parent, frameName);\r\n");
          out.write("}\r\n");
          out.write("\r\n");
          out.write("function getImageSelectionPath() {\r\n");
          out.write("   var selected = tinymce.activeEditor.selection.getNode();\r\n");
          out.write("   var path; \r\n");
          out.write("   if (selected && ( selected.tagName == \"IMG\" || selected.tagName == \"SPAN\" || (selected.tagName == \"INPUT\" && selected.type == \"image\"))){\r\n");
          out.write("      // try to read selected url\r\n");
          out.write("      path = selected.getAttribute(\"data-mce-src\");\r\n");
          out.write("      if (path == null) {\r\n");
          out.write("         path = selected.getAttribute(\"src\");\r\n");
          out.write("      }\r\n");
          out.write("   }\r\n");
          out.write("   return path; \r\n");
          out.write("}\r\n");
          out.write("\r\n");
          out.write("function getDownloadSelectionPath() {\r\n");
          out.write("   var editor = tinymce.activeEditor;\r\n");
          out.write("   var path; \r\n");
          out.write("   if (editor.selection.getContent() != '') {\r\n");
          out.write("      var a = editor.dom.getParent(editor.selection.getNode(), 'A');\r\n");
          out.write("      if (a) {\r\n");
          out.write("         // link present\r\n");
          out.write("         editor.selection.select(a, false);\r\n");
          out.write("         //path to resource\r\n");
          out.write("         path = a.getAttribute(\"data-mce-href\");\r\n");
          out.write("         // in case of a newly created link, use the href attribute\r\n");
          out.write("         if (path == null || path==\"\"){\r\n");
          out.write("            path=a.getAttribute(\"href\");\r\n");
          out.write("         }\r\n");
          out.write("        }\r\n");
          out.write("   }\r\n");
          out.write("   return path; \r\n");
          out.write("}\r\n");
          out.write("\r\n");
          out.write("\r\n");
          out.write("function getEditResource() {\r\n");
          out.write("   if (typeof _editResource != 'undefined') {\r\n");
          out.write("      return _editResource;\r\n");
          out.write("   } else {\r\n");
          out.write("      var editFrame = findFrame(self, 'edit'); \r\n");
          out.write("      var result = editFrame.editedResource; \r\n");
          out.write("      if (result != null) {\r\n");
          out.write("         return result;\r\n");
          out.write("      }\r\n");
          out.write("      result = editFrame.editform.editedResource;\r\n");
          out.write("      return result; \r\n");
          out.write("   }\r\n");
          out.write("}\r\n");
          out.write("\r\n");
          out.write("/**\r\n");
          out.write(" * Returns the path to the gallery dialog with some request parameters for the dialog.<p>\r\n");
          out.write(" * \r\n");
          out.write(" * @return <code>String</code> the dialog URL\r\n");
          out.write(" */ \r\n");
          out.write("function createGalleryDialogUrl(path, typesParam, integrator, integratorArgs) {\r\n");
          out.write("   var resParam = \"\";\r\n");
          out.write("   var editFrame=window;\r\n");
          out.write("   if (typeof _editResource=='undefined'){\r\n");
          out.write("       editFrame=findFrame(self, 'edit');\r\n");
          out.write("   }\r\n");
          out.write("   var editResource = getEditResource();\r\n");
          out.write("   if (editResource) {\r\n");
          out.write("      resParam = \"&");
          out.print(org.opencms.ade.galleries.shared.I_CmsGalleryProviderConstants.CONFIG_REFERENCE_PATH);
          out.write("=\" + getEditResource(); \r\n");
          out.write("   }\r\n");
          out.write("   var integratorParam = \"&integrator=\"+integrator+\"&integratorArgs=\"+integratorArgs; \r\n");
          out.write("   \r\n");
          out.write("   var debugParam = \"\";   \r\n");
          out.write("   // uncomment the next line for debugging GWT code \r\n");
          out.write("   //debugParam=\"&gwt.codesvr=localhost:9997\";\r\n");
          out.write("   // set the content locale\r\n");
          out.write("   var elementLanguage=\"");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${locale}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
          out.write("\";\r\n");
          out.write("   if (typeof _editLanguage!='undefined'){\r\n");
          out.write("       elementLanguage=_editLanguage;\r\n");
          out.write("   } else{\r\n");
          out.write("       try{\r\n");
          out.write("           elementLanguage=editFrame.editform.document.forms['EDITOR']['elementlanguage'].value;\r\n");
          out.write("       }catch(err){\r\n");
          out.write("           // nothing to do\r\n");
          out.write("       }\r\n");
          out.write("   }\r\n");
          out.write("   var searchParam;\r\n");
          out.write("   if (typesParam==\"all\"){\r\n");
          out.write("       searchParam=\"&");
          out.print(org.opencms.ade.galleries.shared.I_CmsGalleryProviderConstants.CONFIG_TAB_CONFIG);
          out.write("=selectAll&");
          out.print(org.opencms.ade.galleries.shared.I_CmsGalleryProviderConstants.PARAM_USE_LINK_DEFAULT_TYPES);
          out.write("=true\";\r\n");
          out.write("   }else{\r\n");
          out.write("       searchParam=\"&");
          out.print(org.opencms.ade.galleries.shared.I_CmsGalleryProviderConstants.CONFIG_TAB_CONFIG);
          out.write("=selectDoc&");
          out.print(org.opencms.ade.galleries.shared.I_CmsGalleryProviderConstants.CONFIG_RESOURCE_TYPES);
          out.write("=\"+typesParam;\r\n");
          out.write("   }\r\n");
          out.write("   searchParam+=\"&");
          out.print(org.opencms.ade.galleries.shared.I_CmsGalleryProviderConstants.CONFIG_CURRENT_ELEMENT);
          out.write("=\"+ ( path==null ? \"\" : path)+\"&__locale=\"+elementLanguage;\r\n");
          out.write("   var galleryStoragePrefixParam = \"&");
          out.print(org.opencms.ade.galleries.shared.I_CmsGalleryProviderConstants.CONFIG_GALLERY_STORAGE_PREFIX);
          out.write("=\";\r\n");
          out.write("   if (typesParam == \"image\") { \r\n");
          out.write("       galleryStoragePrefixParam += \"image\";\r\n");
          out.write("   } else if (typesParam == \"binary\") {\r\n");
          out.write("       galleryStoragePrefixParam += \"binary\"; \r\n");
          out.write("   } else {\r\n");
          out.write("       galleryStoragePrefixParam += \"linkselect\";\r\n");
          out.write("       // leave the parameter empty  \r\n");
          out.write("   } \r\n");
          out.write("   \r\n");
          out.write("   return \"");
          out.print( cms.link("/system/modules/org.opencms.ade.galleries/gallery.jsp") );
          out.write('?');
          out.print(org.opencms.ade.galleries.shared.I_CmsGalleryProviderConstants.CONFIG_GALLERY_MODE+"="+org.opencms.ade.galleries.shared.I_CmsGalleryProviderConstants.GalleryMode.editor.name() );
          out.write("\" + searchParam + resParam + galleryStoragePrefixParam + integratorParam + debugParam;\r\n");
          out.write("}\r\n");
          out.write("\r\n");
          out.write("\r\n");
          out.write("var DEFAULT_INTEGRATOR =  \"/system/workplace/editors/tinymce/integrator.js\";\r\n");
          out.write("function imageGalleryDialogUrl() {\r\n");
          out.write("    var editor = tinymce.activeEditor;\r\n");
          out.write("   var result = createGalleryDialogUrl(getImageSelectionPath(), \"image\", DEFAULT_INTEGRATOR, \"mode:imagegallery\");\r\n");
          out.write("   if (editor.settings.imageGalleryConfig) {\r\n");
          out.write("       result += _paramsForEmbeddedOptions(editor.settings.imageGalleryConfig); \r\n");
          out.write("   }\r\n");
          out.write("   return result;\r\n");
          out.write("}\r\n");
          out.write("\r\n");
          out.write("\r\n");
          out.write("/**\r\n");
          out.write(" * Returns the path to the download gallery dialog with some request parameters for the dialog.<p>\r\n");
          out.write(" * \r\n");
          out.write(" * @return <code>String</code> the dialog URL\r\n");
          out.write(" */ \r\n");
          out.write("function downloadGalleryDialogUrl() {\r\n");
          out.write("    var editor = tinymce.activeEditor;\r\n");
          out.write("   var result =createGalleryDialogUrl(getDownloadSelectionPath(), \"binary\", DEFAULT_INTEGRATOR, \"mode:downloadgallery\");\r\n");
          out.write("   if (editor.settings.downloadGalleryConfig) {\r\n");
          out.write("       result += _paramsForEmbeddedOptions(editor.settings.downloadGalleryConfig); \r\n");
          out.write("   }\r\n");
          out.write("   return result; \r\n");
          out.write("}\r\n");
          out.write("\r\n");
          out.write("\r\n");
          out.write("\r\n");
          out.write("function _paramsForEmbeddedOptions(config) {\r\n");
          out.write("    var result = \"\"; \r\n");
          out.write("    if (config.gallerytypes) {\r\n");
          out.write("        result += \"&gallerytypes=\" + config.gallerytypes; \r\n");
          out.write("    }\r\n");
          out.write("    if (config.gallerypath) {\r\n");
          out.write("        result += \"&gallerypath=\" + config.gallerypath;\r\n");
          out.write("    }\r\n");
          out.write("    return result; \r\n");
          out.write("}\r\n");
          out.write("\r\n");
          out.write("function linkGalleryDialogUrl() {\r\n");
          out.write("      var resParam = \"\";\r\n");
          out.write("       var editFrame=findFrame(self, 'edit');\r\n");
          out.write("       var editResource = getEditResource();\r\n");
          out.write("       if (editResource) {\r\n");
          out.write("          resParam = \"&");
          out.print(org.opencms.ade.galleries.shared.I_CmsGalleryProviderConstants.CONFIG_REFERENCE_PATH);
          out.write("=\" + editResource;           \r\n");
          out.write("       }\r\n");
          out.write("      var baseLink =  \"");
          if (_jspx_meth_cms_005flink_005f0(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
            return;
          out.write("\";\r\n");
          out.write("      var integrator = \"/system/workplace/editors/tinymce/linkgallery_integrator.js\";\r\n");
          out.write("      var integratorParam = \"&integrator=\" + integrator;  \r\n");
          out.write("      return baseLink + \"?dialogmode=editor\"+resParam+integratorParam;\r\n");
          out.write("   \r\n");
          out.write("}\r\n");
          out.write("\r\n");
          out.write("var USE_LINKSTYLEINPUTS = ");
          out.print( options.showElement("option.linkstyleinputs", displayOptions) );
          out.write(";\r\n");
          out.write("\r\n");
          out.write("// opens the link dialog window\r\n");
          out.write("function openLinkDialog(errorMessage) {\r\n");
          out.write("   var linkType = \"link\";\r\n");
          out.write("   if (hasSelectedText()) {\r\n");
          out.write("      var winheight;\r\n");
          out.write("      var winwidth;\r\n");
          out.write("      winheight = (USE_LINKSTYLEINPUTS?220:170);\r\n");
          out.write("      winwidth = 480;\r\n");
          out.write("      var linkInformation = getSelectedLink();\r\n");
          out.write("      var params = \"?showCss=\" + USE_LINKSTYLEINPUTS;\r\n");
          out.write("      if (linkInformation != null) {\r\n");
          out.write("         params += \"&href=\" + encodeURIComponent(linkInformation[\"href\"]);\r\n");
          out.write("         params += \"&target=\" + linkInformation[\"target\"];\r\n");
          out.write("         params += \"&title= \"+linkInformation[\"title\"];\r\n");
          out.write("         if (USE_LINKSTYLEINPUTS) {\r\n");
          out.write("            params += \"&style=\" + linkInformation[\"style\"];\r\n");
          out.write("            params += \"&class=\" + linkInformation[\"class\"];\r\n");
          out.write("         }\r\n");
          out.write("      }\r\n");
          out.write("      openWindow = window.open(workplacePath + \"editors/dialogs/\" + linkType + \".jsp\" + params, \"SetLink\", \"width=\" + winwidth + \", height=\" + winheight + \", resizable=yes, top=300, left=250\");\r\n");
          out.write("      openWindow.focus();\r\n");
          out.write("    } else {\r\n");
          out.write("      alert(errorMessage);\r\n");
          out.write("    }\r\n");
          out.write("}\r\n");
          out.write("\r\n");
          out.write("// inserts the passed html fragment at the current cursor position\r\n");
          out.write("function insertHtml(htmlContent) {\r\n");
          out.write("   tinymce.activeEditor.execCommand(\"mceInsertContent\", false, htmlContent);\r\n");
          out.write("}\r\n");
          out.write("\r\n");
          out.write("// checks if a text part has been selected by the user\r\n");
          out.write("function hasSelectedText() {\r\n");
          out.write("   var sel;\r\n");
          out.write("   var content = tinymce.activeEditor.selection.getContent();\r\n");
          out.write("   return content && content != '';\r\n");
          out.write("}\r\n");
          out.write("\r\n");
          out.write("// retrieves the information about the selected link\r\n");
          out.write("function getSelectedLink() {\r\n");
          out.write("   var linkInformation = null;\r\n");
          out.write("\r\n");
          out.write("   // get the element of the current selection\r\n");
          out.write("   var thelink = tinymce.activeEditor.selection.getNode();\r\n");
          out.write("   if (thelink) {\r\n");
          out.write("      if (/^img$/i.test(thelink.tagName)) {\r\n");
          out.write("            thelink = thelink.parentNode;\r\n");
          out.write("      }\r\n");
          out.write("      if (!/^a$/i.test(thelink.tagName)) {\r\n");
          out.write("            thelink = null;\r\n");
          out.write("      }\r\n");
          out.write("   }\r\n");
          out.write("\r\n");
          out.write("   if (thelink != null) {\r\n");
          out.write("      var linkUri = thelink.getAttribute(\"href\", 0);\r\n");
          out.write("      linkInformation = new Object();\r\n");
          out.write("      linkInformation[\"href\"] = encodeURIComponent(linkUri);\r\n");
          out.write("      linkInformation[\"name\"] = thelink.name;\r\n");
          out.write("      linkInformation[\"target\"] = thelink.target;\r\n");
          out.write("      linkInformation[\"title\"] = thelink.title;\r\n");
          out.write("      if (USE_LINKSTYLEINPUTS) {\r\n");
          out.write("         linkInformation[\"class\"] = thelink.getAttribute(\"class\", 0);\r\n");
          out.write("         linkInformation[\"style\"] = thelink.style.cssText;\r\n");
          out.write("      }     \r\n");
          out.write("   }\r\n");
          out.write("   return linkInformation;\r\n");
          out.write("}\r\n");
          out.write("\r\n");
          out.write("// creates a named anchor or a link from the OpenCms link dialog, called from popup window\r\n");
          out.write("function createLink(linkInformation) {\r\n");
          out.write("    var editor = tinymce.activeEditor;\r\n");
          out.write("    var attributes = {};\r\n");
          out.write("    var a = editor.dom.getParent(editor.selection.getNode(), \"A\");\r\n");
          out.write("    if (a) {\r\n");
          out.write("       a.removeAttribute(\"target\");\r\n");
          out.write("       a.removeAttribute(\"class\");\r\n");
          out.write("       a.removeAttribute(\"title\");\r\n");
          out.write("       a.removeAttribute(\"style\");\r\n");
          out.write("    }\r\n");
          out.write("\r\n");
          out.write("    attributes.href = linkInformation.href; \r\n");
          out.write("    if (linkInformation[\"target\"] != \"\") {\r\n");
          out.write("       attributes.target = linkInformation.target;\r\n");
          out.write("    }\r\n");
          out.write("    if (linkInformation[\"title\"] != null && linkInformation[\"title\"] != \"\") {\r\n");
          out.write("      attributes.title = linkInformation[\"title\"];\r\n");
          out.write("    }\r\n");
          out.write("   \r\n");
          out.write("   if (USE_LINKSTYLEINPUTS) {\r\n");
          out.write("      if (linkInformation[\"class\"] != \"\") {\r\n");
          out.write("         attributes['class'] = linkInformation['class'];\r\n");
          out.write("      }\r\n");
          out.write("      if (linkInformation[\"style\"] != \"\") {\r\n");
          out.write("         attributes.style = linkInformation.style;\r\n");
          out.write("      }\r\n");
          out.write("   }\r\n");
          out.write("   editor.execCommand('mceInsertLink', false, attributes);\r\n");
          out.write("}\r\n");
          out.write("\r\n");
          out.write("//create the path to the HTML gallery dialog with some request parameters for the dialog\r\n");
          out.write("function htmlGalleryDialogUrl() {\r\n");
          out.write("   var resParam = \"\";\r\n");
          out.write("   var editFrame = findFrame(self, \"edit\");\r\n");
          out.write("   resParam = \"&");
          out.print(org.opencms.ade.galleries.shared.I_CmsGalleryProviderConstants.CONFIG_REFERENCE_PATH);
          out.write("=\" + getEditResource(); \r\n");
          out.write("   var integratorUri = \"/system/workplace/editors/tinymce/htmlgallery_integrator.js\";\r\n");
          out.write("   var integratorParam = \"&integrator=\"+integratorUri; \r\n");
          out.write("   return \"");
          out.print( cms.link("/system/workplace/galleries/htmlgallery/index.jsp") );
          out.write("?dialogmode=editor\" + resParam +integratorParam;\r\n");
          out.write("}\r\n");
          out.write("\r\n");
          out.write("\r\n");
          out.write("// set it in window, because this is used from the link selection dialog \r\n");
          out.write("window.createLink = createLink; \r\n");
          out.write("\r\n");
          out.write("tinymce.create('tinymce.opencms', {\r\n");
          out.write("   init : function(ed, url) {\r\n");
          out.write("      \r\n");
          out.write("      // periodically check if we are in fullscreen mode and the content has changed.\r\n");
          out.write("      // if this is the case, transfer the content from the fullscreen editor to the editor from which\r\n");
          out.write("      // the fullscreen mode has been started.\r\n");
          out.write("      \r\n");
          out.write("      var checkFullscreen = function() {\r\n");
          out.write("         var active = tinyMCE.activeEditor;\r\n");
          out.write("         if (active && (active.id == \"mce_fullscreen\")) {\r\n");
          out.write("           actualEditor = tinyMCE.get(active.settings.fullscreen_editor_id);\r\n");
          out.write("           var oldContent = tinyMCE.trim(actualEditor.getContent({format : 'raw', no_events : 1}));\r\n");
          out.write("           var newContent = tinyMCE.trim(active.getContent({format : 'raw', no_events : 1}));\r\n");
          out.write("           if (oldContent != newContent) {\r\n");
          out.write("             actualEditor.setContent(newContent);\r\n");
          out.write("           }\r\n");
          out.write("        }\r\n");
          out.write("     }\r\n");
          out.write("      \r\n");
          out.write("     if (!window.installedFullscreenSaveTimer) {\r\n");
          out.write("         window.setInterval(checkFullscreen, 600);\r\n");
          out.write("         window.installedFullscreenSaveTimer = true; \r\n");
          out.write("     }\r\n");
          out.write("      \r\n");
          out.write("      ed.addCommand(\"cmsImageGallery\", function() {\r\n");
          out.write("         doShowCmsGalleries(ed, imageGalleryDialogUrl());\r\n");
          out.write("      });\r\n");
          out.write("      \r\n");
          out.write("      ed.addCommand(\"cmsDownloadGallery\", function() {\r\n");
          out.write("         doShowCmsGalleries(ed, downloadGalleryDialogUrl());\r\n");
          out.write("      });\r\n");
          out.write("      \r\n");
          out.write("      ed.addCommand(\"cmsLink\", function() {\r\n");
          out.write("         openLinkDialog(\"");
          out.print( CmsEncoder.encodeJavaEntities(OpenCms.getWorkplaceManager().getMessages(OpenCms.getWorkplaceManager().getWorkplaceLocale(cms.getCmsObject())).key(org.opencms.workplace.editors.Messages.ERR_EDITOR_MESSAGE_NOSELECTION_0), encoding) );
          out.write("\");\r\n");
          out.write("      });\r\n");
          out.write("      \r\n");
          out.write("      ed.addCommand(\"cmsHtmlGallery\", function() {\r\n");
          out.write("         var width = 685;\r\n");
          out.write("         var height = 610;\r\n");
          out.write("         var url = htmlGalleryDialogUrl();\r\n");
          out.write("         ed.windowManager.open({url: url, width : width, height: height, inline: \"yes\"}, {});\r\n");
          out.write("      });\r\n");
          out.write("      \r\n");
          out.write("      ed.addCommand(\"cmsLinkGallery\", function() {\r\n");
          out.write("         var width = 685;\r\n");
          out.write("         var height = 600;\r\n");
          out.write("         var url = linkGalleryDialogUrl();\r\n");
          out.write("         ed.windowManager.open({url: url, width : width, height: height, inline: \"yes\"}, {});\r\n");
          out.write("      });\r\n");
          out.write("      \r\n");
          out.write("      ed.addButton('OcmsImageGallery', {\r\n");
          out.write("         title: '");
          if (_jspx_meth_fmt_005fmessage_005f0(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
            return;
          out.write("',\r\n");
          out.write("         image: '");
          out.print( org.opencms.workplace.CmsWorkplace.getResourceUri("editors/tinymce/toolbar/oc-imagegallery.png") );
          out.write("',\r\n");
          out.write("         cmd: \"cmsImageGallery\"\r\n");
          out.write("       });\r\n");
          out.write("      \r\n");
          out.write("      ed.addButton('OcmsDownloadGallery', {\r\n");
          out.write("         title: '");
          if (_jspx_meth_fmt_005fmessage_005f1(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
            return;
          out.write("',\r\n");
          out.write("         image: '");
          out.print( org.opencms.workplace.CmsWorkplace.getResourceUri("editors/tinymce/toolbar/oc-downloadgallery.png") );
          out.write("',\r\n");
          out.write("         cmd: \"cmsDownloadGallery\"\r\n");
          out.write("      });\r\n");
          out.write("      \r\n");
          out.write("      ed.addButton('oc-link', {\r\n");
          out.write("         title: '");
          out.print( CmsEncoder.encodeJavaEntities(OpenCms.getWorkplaceManager().getMessages(OpenCms.getWorkplaceManager().getWorkplaceLocale(cms.getCmsObject())).key(org.opencms.workplace.editors.Messages.GUI_BUTTON_LINKTO_0), encoding) );
          out.write("',\r\n");
          out.write("         image: '");
          out.print( org.opencms.workplace.CmsWorkplace.getResourceUri("editors/tinymce/toolbar/oc-link.gif") );
          out.write("',\r\n");
          out.write("         cmd: \"cmsLink\"\r\n");
          out.write("       });\r\n");
          out.write("      \r\n");
          out.write("      ed.addButton('OcmsHtmlGallery', {\r\n");
          out.write("         title : '");
          out.print(org.opencms.workplace.galleries.Messages.get().getBundle(OpenCms.getWorkplaceManager().getWorkplaceLocale(cms.getCmsObject())).key(org.opencms.workplace.galleries.Messages.GUI_HTMLGALLERY_EDITOR_TOOLTIP_0));
          out.write("',\r\n");
          out.write("         image : '");
          out.print( org.opencms.workplace.CmsWorkplace.getResourceUri("editors/tinymce/toolbar/oc-htmlgallery.gif") );
          out.write("',\r\n");
          out.write("         cmd: 'cmsHtmlGallery'\r\n");
          out.write("      });\r\n");
          out.write("      \r\n");
          out.write("      ed.addButton('OcmsLinkGallery', { \r\n");
          out.write("         title : '");
          out.print(org.opencms.workplace.galleries.Messages.get().getBundle(OpenCms.getWorkplaceManager().getWorkplaceLocale(cms.getCmsObject())).key(org.opencms.workplace.galleries.Messages.GUI_LINKGALLERY_EDITOR_TOOLTIP_0));
          out.write("',\r\n");
          out.write("         image: '");
          out.print( org.opencms.workplace.CmsWorkplace.getResourceUri("editors/tinymce/toolbar/oc-linkgallery.gif") );
          out.write("',\r\n");
          out.write("         cmd : 'cmsLinkGallery'\r\n");
          out.write("      });\r\n");
          out.write("      ed.addMenuItem('OcmsImageGallery', {\r\n");
          out.write("         text: '");
          if (_jspx_meth_fmt_005fmessage_005f2(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
            return;
          out.write("',\r\n");
          out.write("         context: 'tools',\r\n");
          out.write("         icon: 'image',\r\n");
          out.write("         cmd: \"cmsImageGallery\"\r\n");
          out.write("       });\r\n");
          out.write("      ed.addMenuItem('OcmsDownloadGallery', {\r\n");
          out.write("          text: '");
          if (_jspx_meth_fmt_005fmessage_005f3(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
            return;
          out.write("',\r\n");
          out.write("          context: 'tools',\r\n");
          out.write("          icon: 'browse',\r\n");
          out.write("          cmd: \"cmsDownloadGallery\"\r\n");
          out.write("       });\r\n");
          out.write("   },\r\n");
          out.write("\r\n");
          out.write("   getInfo : function() {\r\n");
          out.write("      return {\r\n");
          out.write("         longname : 'OpenCms TinyMCE plugin',\r\n");
          out.write("         author : 'Alkacon Software GmbH',\r\n");
          out.write("         authorurl : 'http://www.opencms.org',\r\n");
          out.write("         infourl : 'http://wwww.opencms.org',\r\n");
          out.write("         version : '1.0'\r\n");
          out.write("      };\r\n");
          out.write("   }\r\n");
          out.write("});\r\n");
          out.write("\r\n");
          out.write("window.cmsTinyMceFileBrowser = function(fieldId, currentValue, browserType, targetWindow) {\r\n");
          out.write("   var editor = tinymce.activeEditor;\r\n");
          out.write("   var resourceType=\"all\";\r\n");
          out.write("   if (browserType == \"image\") {\r\n");
          out.write("       resourceType=browserType;\r\n");
          out.write("   } \r\n");
          out.write("   var integrator = \"/system/workplace/editors/tinymce/filebrowser_gallery_integrator.js\"\r\n");
          out.write("   var url = createGalleryDialogUrl(currentValue, resourceType, integrator);\r\n");
          out.write("   url = url + \"&hideformats=true\";\r\n");
          out.write("   editor.cmsTargetWindow = targetWindow;\r\n");
          out.write("   editor.cmsFieldId = fieldId; \r\n");
          out.write("   doShowCmsGalleries(editor, url);\r\n");
          out.write("}\r\n");
          out.write("\r\n");
          out.write("tinymce.PluginManager.add('opencms', tinymce.opencms);\r\n");
          out.write("} // end function initOpenCmsTinyMCEPlugin\r\n");
          out.write("\r\n");
          out.write("initOpenCmsTinyMCEPlugin();\r\n");
          out.write("\r\n");
          out.write("\r\n");
          out.write("\r\n");
          int evalDoAfterBody = _jspx_th_fmt_005fbundle_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
        if (_jspx_eval_fmt_005fbundle_005f0 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
          out = _jspx_page_context.popBody();
        }
      }
      if (_jspx_th_fmt_005fbundle_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        _005fjspx_005ftagPool_005ffmt_005fbundle_0026_005fbasename.reuse(_jspx_th_fmt_005fbundle_005f0);
        return;
      }
      _005fjspx_005ftagPool_005ffmt_005fbundle_0026_005fbasename.reuse(_jspx_th_fmt_005fbundle_005f0);
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_fmt_005fsetLocale_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:setLocale
    org.apache.taglibs.standard.tag.rt.fmt.SetLocaleTag _jspx_th_fmt_005fsetLocale_005f0 = (org.apache.taglibs.standard.tag.rt.fmt.SetLocaleTag) _005fjspx_005ftagPool_005ffmt_005fsetLocale_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.SetLocaleTag.class);
    _jspx_th_fmt_005fsetLocale_005f0.setPageContext(_jspx_page_context);
    _jspx_th_fmt_005fsetLocale_005f0.setParent(null);
    // /WEB-INF/jsp/offline/system/workplace/editors/tinymce/opencms_plugin.js.jsp(21,2) name = value type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_fmt_005fsetLocale_005f0.setValue((java.lang.Object) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${locale}", java.lang.Object.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
    int _jspx_eval_fmt_005fsetLocale_005f0 = _jspx_th_fmt_005fsetLocale_005f0.doStartTag();
    if (_jspx_th_fmt_005fsetLocale_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005ffmt_005fsetLocale_0026_005fvalue_005fnobody.reuse(_jspx_th_fmt_005fsetLocale_005f0);
      return true;
    }
    _005fjspx_005ftagPool_005ffmt_005fsetLocale_0026_005fvalue_005fnobody.reuse(_jspx_th_fmt_005fsetLocale_005f0);
    return false;
  }

  private boolean _jspx_meth_cms_005flink_005f0(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  cms:link
    org.opencms.jsp.CmsJspTagLink _jspx_th_cms_005flink_005f0 = (org.opencms.jsp.CmsJspTagLink) _005fjspx_005ftagPool_005fcms_005flink.get(org.opencms.jsp.CmsJspTagLink.class);
    _jspx_th_cms_005flink_005f0.setPageContext(_jspx_page_context);
    _jspx_th_cms_005flink_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
    int _jspx_eval_cms_005flink_005f0 = _jspx_th_cms_005flink_005f0.doStartTag();
    if (_jspx_eval_cms_005flink_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
      if (_jspx_eval_cms_005flink_005f0 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
        out = _jspx_page_context.pushBody();
        _jspx_th_cms_005flink_005f0.setBodyContent((javax.servlet.jsp.tagext.BodyContent) out);
        _jspx_th_cms_005flink_005f0.doInitBody();
      }
      do {
        out.write("/system/workplace/galleries/linkgallery/index.jsp");
        int evalDoAfterBody = _jspx_th_cms_005flink_005f0.doAfterBody();
        if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
          break;
      } while (true);
      if (_jspx_eval_cms_005flink_005f0 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
        out = _jspx_page_context.popBody();
      }
    }
    if (_jspx_th_cms_005flink_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005fcms_005flink.reuse(_jspx_th_cms_005flink_005f0);
      return true;
    }
    _005fjspx_005ftagPool_005fcms_005flink.reuse(_jspx_th_cms_005flink_005f0);
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f0(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f0 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    _jspx_th_fmt_005fmessage_005f0.setPageContext(_jspx_page_context);
    _jspx_th_fmt_005fmessage_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
    // /WEB-INF/jsp/offline/system/workplace/editors/tinymce/opencms_plugin.js.jsp(392,17) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_fmt_005fmessage_005f0.setKey("GUI_IMAGE_GALLERY_TITLE_0");
    int _jspx_eval_fmt_005fmessage_005f0 = _jspx_th_fmt_005fmessage_005f0.doStartTag();
    if (_jspx_th_fmt_005fmessage_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f0);
      return true;
    }
    _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f0);
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f1(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f1 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    _jspx_th_fmt_005fmessage_005f1.setPageContext(_jspx_page_context);
    _jspx_th_fmt_005fmessage_005f1.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
    // /WEB-INF/jsp/offline/system/workplace/editors/tinymce/opencms_plugin.js.jsp(398,17) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_fmt_005fmessage_005f1.setKey("GUI_DOWNLOAD_GALLERY_TITLE_0");
    int _jspx_eval_fmt_005fmessage_005f1 = _jspx_th_fmt_005fmessage_005f1.doStartTag();
    if (_jspx_th_fmt_005fmessage_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f1);
      return true;
    }
    _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f1);
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f2(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f2 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    _jspx_th_fmt_005fmessage_005f2.setPageContext(_jspx_page_context);
    _jspx_th_fmt_005fmessage_005f2.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
    // /WEB-INF/jsp/offline/system/workplace/editors/tinymce/opencms_plugin.js.jsp(421,16) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_fmt_005fmessage_005f2.setKey("GUI_IMAGE_GALLERY_TITLE_0");
    int _jspx_eval_fmt_005fmessage_005f2 = _jspx_th_fmt_005fmessage_005f2.doStartTag();
    if (_jspx_th_fmt_005fmessage_005f2.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f2);
      return true;
    }
    _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f2);
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f3(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f3 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    _jspx_th_fmt_005fmessage_005f3.setPageContext(_jspx_page_context);
    _jspx_th_fmt_005fmessage_005f3.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
    // /WEB-INF/jsp/offline/system/workplace/editors/tinymce/opencms_plugin.js.jsp(427,17) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_fmt_005fmessage_005f3.setKey("GUI_DOWNLOAD_GALLERY_TITLE_0");
    int _jspx_eval_fmt_005fmessage_005f3 = _jspx_th_fmt_005fmessage_005f3.doStartTag();
    if (_jspx_th_fmt_005fmessage_005f3.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f3);
      return true;
    }
    _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f3);
    return false;
  }
}
