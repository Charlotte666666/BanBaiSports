/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.27
 * Generated at: 2015-01-20 03:03:16 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.setup;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class step_005f6_005fmodule_005fselection_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      org.opencms.setup.CmsSetupBean Bean = null;
      synchronized (session) {
        Bean = (org.opencms.setup.CmsSetupBean) _jspx_page_context.getAttribute("Bean", javax.servlet.jsp.PageContext.SESSION_SCOPE);
        if (Bean == null){
          Bean = new org.opencms.setup.CmsSetupBean();
          _jspx_page_context.setAttribute("Bean", Bean, javax.servlet.jsp.PageContext.SESSION_SCOPE);
        }
      }
      org.apache.jasper.runtime.JspRuntimeLibrary.introspect(_jspx_page_context.findAttribute("Bean"), request);

	
	// next page
	String nextPage = "step_7_save_properties.jsp";	
	// previous page
	String prevPage = "step_3_database_selection.jsp";
	
	boolean isFormSubmitted = (request.getParameter("submit") != null);
	
	if (Bean.isInitialized() && isFormSubmitted) {
		response.sendRedirect(nextPage);
	}	
	

      out.write('\n');
      out.print( Bean.getHtmlPart("C_HTML_START") );
      out.write("\n");
      out.write("Alkacon OpenCms Setup Wizard\n");
      out.print( Bean.getHtmlPart("C_HEAD_START") );
      out.write('\n');
      out.print( Bean.getHtmlPart("C_STYLES") );
      out.write('\n');
      out.print( Bean.getHtmlPart("C_STYLES_SETUP") );
      out.write('\n');
      out.print( Bean.getHtmlPart("C_SCRIPT_HELP") );
      out.write("\n");
      out.write("<script type=\"text/javascript\" language=\"JavaScript\"><!--\n");
      out.print( Bean.jsModuleNames() );
      out.write('\n');
      out.print( Bean.jsModuleDependencies() );
      out.write('\n');
      out.print( Bean.jsComponentNames() );
      out.write('\n');
      out.print( Bean.jsComponentModules() );
      out.write('\n');
      out.print( Bean.jsComponentDependencies() );
      out.write("\n");
      out.write("\n");
      out.write("// Checks the dependencies for a specified module package name.\n");
      out.write("function checkModuleDependencies(modulePackageName) {\t\n");
      out.write("\n");
      out.write("\tif (modulePackageNames.length == 1) {\n");
      out.write("\t\treturn;\n");
      out.write("\t}\n");
      out.write("\tvar updatesCount = checkForwardDependencies(modulePackageName, modulePackageNames, moduleDependencies, document.modules.availableModules, 0);\n");
      out.write("\tif (updatesCount > 0) {\n");
      out.write("\t\talert(\"Dependencies have been updated!\\r\\n\\r\\n\" + updatesCount + \" module(s) depend on this module.\");\n");
      out.write("\t}\n");
      out.write("\tvar hasMissingDependencies = checkBackwardDependencies(modulePackageName, modulePackageNames, moduleDependencies, document.modules.availableModules, 0);\n");
      out.write("\tif (hasMissingDependencies) {\n");
      out.write("    \talert(\"Dependencies have been updated!\\r\\n\\r\\nRequired modules have been added.\");\n");
      out.write("\t}\n");
      out.write("}\n");
      out.write("\n");
      out.write("// Checks the dependencies for a specified component name.\n");
      out.write("function checkComponentDependencies(componentName) {\t\n");
      out.write("\n");
      out.write("\tif (componentNames.length == 1) {\n");
      out.write("\t\treturn;\n");
      out.write("\t}\n");
      out.write("\tvar updatesCount = checkForwardDependencies(componentName, componentNames, componentDependencies, document.modules.availableComponents, 0);\n");
      out.write("\tif (updatesCount > 0) {\n");
      out.write("\t\talert(\"Dependencies have been updated!\\r\\n\\r\\n\" + updatesCount + \" group(s) depend on this component.\");\n");
      out.write("\t}\n");
      out.write("\tvar hasMissingDependencies = checkBackwardDependencies(componentName, componentNames, componentDependencies, document.modules.availableComponents, 0);\n");
      out.write("\tif (hasMissingDependencies) {\n");
      out.write("    \talert(\"Dependencies have been updated!\\r\\n\\r\\nRequired groups have been added.\");\n");
      out.write("\t}\n");
      out.write("}\n");
      out.write("\n");
      out.write("// Returns the index for a specified module package name.\n");
      out.write("function getIndex(list, entry) {\n");
      out.write("\n");
      out.write("\tfor (var i = 0; i < list.length; i++) {\n");
      out.write("\t\tif (list[i] == entry) {\n");
      out.write("\t\t\treturn i;\n");
      out.write("\t\t}\n");
      out.write("\t}\n");
      out.write("\treturn -1;\n");
      out.write("}\n");
      out.write("\n");
      out.write("// Checks whether other entries depend on the specified entry.\n");
      out.write("function checkForwardDependencies(entry, list, dependencyList, checkBoxes, recursionCounter) {\t\n");
      out.write("\n");
      out.write("\t// check if we are stuck in an infinite loop of dependencies\n");
      out.write("\tif (recursionCounter > 255) {\n");
      out.write("\t\treturn 0;\n");
      out.write("\t}\n");
      out.write("\n");
      out.write("\tif (list.length == 1) {\n");
      out.write("\t\treturn 0;\n");
      out.write("\t}\t\n");
      out.write("\t\n");
      out.write("\tvar index = getIndex(list, entry);\t\t\n");
      out.write("\tif ((index < 0) || (dependencyList[index].length == 0)) {\n");
      out.write("\t    return 0;\n");
      out.write("\t}\n");
      out.write("\t\n");
      out.write("\tvar doUncheck = !checkBoxes[index].checked;\n");
      out.write("\tvar dependencies = dependencyList[index];\t\t\n");
      out.write("\tvar updatesCount = 0;\t\n");
      out.write("\t\n");
      out.write("\t// check/uncheck all entries that are dependent on the specified entry\n");
      out.write("\tfor (var j = 0; j < dependencies.length; j++) {\n");
      out.write("\t\tvar dependencyIndex = getIndex(list, dependencies[j]);\n");
      out.write("\t\tif (dependencyIndex > -1) {\n");
      out.write("\t\t\tif (doUncheck) {\n");
      out.write("\t\t\t\tcheckBoxes[dependencyIndex].checked = false;\n");
      out.write("\t\t\t} else {\n");
      out.write("\t\t\t\tcheckBoxes[dependencyIndex].checked = true;\n");
      out.write("\t\t\t}\n");
      out.write("\t\t}\n");
      out.write("\t\tupdatesCount = updatesCount + checkForwardDependencies(dependencies[j], list, dependencyList, checkBoxes, recursionCounter + 1);\n");
      out.write("\t}\t\n");
      out.write("\treturn updatesCount + dependencies.length;\n");
      out.write("}\n");
      out.write("\n");
      out.write("// Checks whether the specified entry depends on another entries.\n");
      out.write("function checkBackwardDependencies(entry, list, dependencyList, checkBoxes, recursionCounter) {\n");
      out.write("\n");
      out.write("\t// check if we are stuck in an infinite loop of dependencies\n");
      out.write("\tif (recursionCounter > 255) {\n");
      out.write("\t\treturn false;\n");
      out.write("\t}\n");
      out.write("\t\n");
      out.write("\tif (list.length == 1) {\n");
      out.write("\t\treturn false;\n");
      out.write("\t}\n");
      out.write("\t\n");
      out.write("\tvar hasMissingDependency = false;\n");
      out.write("\t// visit all dependency lists and check if the specified entry is found in one of those lists\n");
      out.write("\tfor (var i = 0; i < dependencyList.length; i++) {\n");
      out.write("\t\tvar dependencies = dependencyList[i];\n");
      out.write("\t\t\n");
      out.write("\t\tfor (var j = 0; j < dependencies.length; j++) {\n");
      out.write("\t\t\tif (dependencies[j] == entry) {\n");
      out.write("\t\t\t\t// yup, the specified entry has been found in a dependency list\n");
      out.write("\t\t\t\t// list[i] is the entry that is required to fulfill the dependency\n");
      out.write("\t\t\t\t// set the checkbox of the required entry on checked\t\t\t\t\n");
      out.write("\t\t\t\tif (!checkBoxes[i].checked) {\n");
      out.write("\t\t\t\t\tcheckBoxes[i].checked = true;\n");
      out.write("\t\t\t\t\thasMissingDependency = true;\n");
      out.write("\t\t\t\t\t\n");
      out.write("\t\t\t\t\t// check whether the required module itself depends on other modules\n");
      out.write("\t\t\t\t\tcheckBackwardDependencies(list[i], list, dependencyList, checkBoxes, recursionCounter + 1);\n");
      out.write("\t\t\t\t}\n");
      out.write("\t\t\t}\n");
      out.write("\t\t}\n");
      out.write("\t}\n");
      out.write("\treturn hasMissingDependency;\n");
      out.write("}\n");
      out.write("\n");
      out.write("function getAvailableModules() {\n");
      out.write("\n");
      out.write("\tvar form = document.modules;\t\n");
      out.write("\tvar installModules = new Array();\n");
      out.write("\n");
      out.write("\tif (document.getElementById('modulesView').style.display == 'none') {\n");
      out.write("\t\t// component selection\n");
      out.write("\t\tif (componentNames.length > 1) {\t\t\n");
      out.write("\t\t\tfor (var i = 0; i < componentNames.length; i++) {\n");
      out.write("\t\t\t\tif (form.availableComponents[i].checked) {\t\n");
      out.write("\t\t\t\t\tinstallModules.push(componentModules[i]);\n");
      out.write("\t\t\t\t}\n");
      out.write("\t\t\t}\n");
      out.write("\t\t\tform.installModules.value = installModules.join(\"|\");\n");
      out.write("\t\t} else {\n");
      out.write("\t\t\tif (form.availableComponents!= null && form.availableComponents.checked) {\n");
      out.write("\t\t\t\tform.installModules.value = componentModules[0];\n");
      out.write("\t\t\t}\n");
      out.write("\t\t}\n");
      out.write("\t} else {\n");
      out.write("\t\t// module selection\n");
      out.write("\t\tif (modulePackageNames.length > 1) {\t\t\n");
      out.write("\t\t\tfor (var i = 0; i < modulePackageNames.length; i++) {\n");
      out.write("\t\t\t\tif (form.availableModules[i].checked) {\t\n");
      out.write("\t\t\t\t\tinstallModules.push(modulePackageNames[i]);\n");
      out.write("\t\t\t\t}\n");
      out.write("\t\t\t}\n");
      out.write("\t\t\tform.installModules.value = installModules.join(\"|\");\n");
      out.write("\t\t} else {\n");
      out.write("\t\t\tif (form.availableModules != null && form.availableModules.checked) {\n");
      out.write("\t\t\t\tform.installModules.value = modulePackageNames[0];\n");
      out.write("\t\t\t}\n");
      out.write("\t\t}\n");
      out.write("\t}\n");
      out.write("\t//alert(form.installModules.value);\n");
      out.write("\treturn false;\n");
      out.write("}\n");
      out.write("\n");
      out.write("function switchView() {\n");
      out.write("\t\n");
      out.write("\tif (document.getElementById('modulesView').style.display == 'none') {\n");
      out.write("       document.getElementById('componentsView').style.display = 'none';\n");
      out.write("       document.getElementById('modulesView').style.display = '';\n");
      out.write("    } else {\n");
      out.write("       document.getElementById('modulesView').style.display = 'none';\n");
      out.write("       document.getElementById('componentsView').style.display = '';\n");
      out.write("    }\n");
      out.write("}\n");
      out.write("\n");
      out.write("//-->\n");
      out.write("</script>\n");
      out.print( Bean.getHtmlPart("C_HEAD_END") );
      out.write("\n");
      out.write("Alkacon OpenCms Setup Wizard - Module selection\n");
      out.print( Bean.getHtmlPart("C_CONTENT_SETUP_START") );
      out.write('\n');
      out.write('\n');
 if (Bean.isInitialized()) { 
      out.write("\n");
      out.write("\n");
      out.write("<form method=\"post\" class=\"nomargin\" name=\"modules\" onSubmit=\"getAvailableModules();\">\n");
      out.write("<input type=\"hidden\" name=\"installModules\" value=\"\">\n");
      out.write("<table id=\"componentsView\" border=\"0\" cellpadding=\"5\" cellspacing=\"0\" style=\"width: 100%; height: 100%;\">\n");
      out.write("<tr>\n");
      out.write("\t<td valign=\"top\">\n");
      out.write("\t\n");
      out.print( Bean.getHtmlPart("C_BLOCK_START", "Module groups available for installation") );
      out.write("\n");
      out.write("\n");
      out.write("\t<div style=\"width:96%; height: 300px; overflow: auto;\">\n");
      out.write("    <table border=\"0\" cellpadding=\"1\" cellspacing=\"0\">\n");
      out.print( Bean.htmlComponents() );
      out.write("\n");
      out.write("\t</table>\n");
      out.write("\t</div>\n");
      out.write("\n");
      out.print( Bean.getHtmlPart("C_BLOCK_END") );
      out.write("\n");
      out.write("\n");
      out.write("</td>\n");
      out.write("</tr><tr><td align='right'><a href=\"javascript:switchView()\">Individual module selection</a></td></tr>\n");
      out.write("</table>\n");
      out.write("<table id=\"modulesView\" style='width: 100%; height: 100%; display:none;' border=\"0\" cellpadding=\"5\" cellspacing=\"0\" >\n");
      out.write("<tr>\n");
      out.write("\t<td valign=\"top\">\n");
      out.write("\t\n");
      out.print( Bean.getHtmlPart("C_BLOCK_START", "Modules available for installation") );
      out.write("\n");
      out.write("\n");
      out.write("\t<div style=\"width:96%; height: 300px; overflow: auto;\">\n");
      out.write("    <table border=\"0\" cellpadding=\"2\" cellspacing=\"0\">\n");
      out.print( Bean.htmlModules() );
      out.write("\n");
      out.write("\t</table>\n");
      out.write("\t</div>\n");
      out.write("\n");
      out.print( Bean.getHtmlPart("C_BLOCK_END") );
      out.write("\n");
      out.write("\n");
      out.write("</td>\n");
      out.write("</tr><tr><td align='right'><a href=\"javascript:switchView()\">Module group selection</a></td></tr>\n");
      out.write("</table>\n");
      out.write("\n");
      out.print( Bean.getHtmlPart("C_CONTENT_END") );
      out.write('\n');
      out.write('\n');
      out.print( Bean.htmlModuleHelpDescriptions() );
      out.write('\n');
      out.write('\n');
      out.print( Bean.getHtmlPart("C_BUTTONS_START") );
      out.write("\n");
      out.write("<input name=\"back\" type=\"button\" value=\"&#060;&#060; Back\" class=\"dialogbutton\" onclick=\"location.href='");
      out.print( prevPage );
      out.write("';\">\n");
      out.write("<input name=\"submit\" type=\"submit\" value=\"Continue &#062;&#062;\" class=\"dialogbutton\" >\n");
      out.write("<input name=\"cancel\" type=\"button\" value=\"Cancel\" class=\"dialogbutton\" onclick=\"location.href='index.jsp';\" style=\"margin-left: 50px;\">\n");
      out.print( Bean.getHtmlPart("C_BUTTONS_END") );
      out.write("\n");
      out.write("</form>\n");
      out.write("</span>\n");
 } else { 
      out.write('\n');
      out.print( Bean.displayError(""));
      out.write('\n');
      out.print( Bean.getHtmlPart("C_CONTENT_END") );
      out.write('\n');
 } 
      out.write('\n');
      out.print( Bean.getHtmlPart("C_HTML_END") );
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
