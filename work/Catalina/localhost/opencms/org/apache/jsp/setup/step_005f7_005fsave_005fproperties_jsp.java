/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.27
 * Generated at: 2015-01-20 03:03:58 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.setup;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class step_005f7_005fsave_005fproperties_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      org.opencms.setup.CmsSetupBean Bean = null;
      synchronized (session) {
        Bean = (org.opencms.setup.CmsSetupBean) _jspx_page_context.getAttribute("Bean", javax.servlet.jsp.PageContext.SESSION_SCOPE);
        if (Bean == null){
          Bean = new org.opencms.setup.CmsSetupBean();
          _jspx_page_context.setAttribute("Bean", Bean, javax.servlet.jsp.PageContext.SESSION_SCOPE);
        }
      }
      org.apache.jasper.runtime.JspRuntimeLibrary.introspect(_jspx_page_context.findAttribute("Bean"), request);


	// next page 
	String nextPage = "step_8_import_modules.jsp";	
	// previous page
	String prevPage = "step_6_module_selection.jsp";
	
	String serverUrl = request.getScheme() + "://" + request.getServerName();
	int serverPort = request.getServerPort();
	if (serverPort != 80) {
		serverUrl += ":" + serverPort;
	}

      out.write('\n');
      out.print( Bean.getHtmlPart("C_HTML_START") );
      out.write("\n");
      out.write("Alkacon OpenCms Setup Wizard\n");
      out.print( Bean.getHtmlPart("C_HEAD_START") );
      out.write('\n');
      out.print( Bean.getHtmlPart("C_STYLES") );
      out.write('\n');
      out.print( Bean.getHtmlPart("C_STYLES_SETUP") );
      out.write('\n');
      out.print( Bean.getHtmlPart("C_SCRIPT_HELP") );
      out.write("\n");
      out.write("<script type=\"text/javascript\">\n");
      out.write("\tfunction checkSubmit() {\n");
      out.write("\t\t// checks the server URL and the ethernet MAC address\n");
      out.write("\t\tvar regExp = \"^(http|https|ftp)\\://((([a-z_0-9\\-]+)+(([\\:]?)+([a-z_0-9\\-]+))?)(\\@+)?)?(((((([0-1])?([0-9])?[0-9])|(2[0-4][0-9])|(2[0-5][0-5])))\\.(((([0-1])?([0-9])?[0-9])|(2[0-4][0-9])|(2[0-5][0-5])))\\.(((([0-1])?([0-9])?[0-9])|(2[0-4][0-9])|(2[0-5][0-5])))\\.(((([0-1])?([0-9])?[0-9])|(2[0-4][0-9])|(2[0-5][0-5]))))|((([a-z0-9\\-])+\\.)+([a-z]{2}\\.[a-z]{2}|[a-z]{2,4})))(([\\:])(([1-9]{1}[0-9]{1,3})|([1-5]{1}[0-9]{2,4})|(6[0-5]{2}[0-3][0-6])))?$\";\n");
      out.write("\t\tvar isUrlOK = document.forms[0].workplaceSite.value.match(regExp);\n");
      out.write("\t\tregExp = \"^([0-9a-fA-F][0-9a-fA-F]:){5}([0-9a-fA-F][0-9a-fA-F])$\";\n");
      out.write("\t\tvar macValue = document.forms[0].ethernetAddress.value;\n");
      out.write("\t\tvar isMacOK = macValue.match(regExp);\n");
      out.write("\t\tif (isUrlOK && (isMacOK || macValue == \"\")) {\n");
      out.write("\t\t\treturn true;\n");
      out.write("\t\t} else if (!isMacOK) {\n");
      out.write("\t\t\talert(\"Please enter the valid MAC address of your server\\nor leave the field empty to generate a random address.\");\n");
      out.write("\t\t} else if (!isUrlOK) {\n");
      out.write("\t\t\talert(\"Please enter a valid site for the OpenCms workplace.\");\n");
      out.write("\t\t}\n");
      out.write("\t\treturn false;\n");
      out.write("\t}\n");
      out.write("</script>\n");
      out.print( Bean.getHtmlPart("C_HEAD_END") );
      out.write("\n");
      out.write("Alkacon OpenCms Setup Wizard - Settings\n");
      out.print( Bean.getHtmlPart("C_CONTENT_SETUP_START") );
      out.write('\n');
 if (Bean.isInitialized())	{ 
      out.write("\n");
      out.write("<form action=\"");
      out.print( nextPage );
      out.write("\" method=\"post\" class=\"nomargin\" onsubmit=\"return checkSubmit();\">\n");
      out.write("\n");
      out.write("<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\" style=\"width: 100%; height: 350px;\">\n");
      out.write("<tr>\n");
      out.write("\t<td style=\"vertical-align: top;\">\n");
      out.write("\n");
      out.print( Bean.getHtmlPart("C_BLOCK_START", "OpenCms settings") );
      out.write("\n");
      out.write("<table border=\"0\" cellpadding=\"4\" cellspacing=\"0\">\n");
      out.write("\t<tr>\n");
      out.write("\t\t<td>Enter your server's ethernet (MAC) address</td>\n");
      out.write("\t\t<td>\n");
      out.write("\t\t\t<input type=\"text\" name=\"ethernetAddress\" value=\"");
      out.print( Bean.getEthernetAddress() );
      out.write("\" style=\"width: 150px;\">\n");
      out.write("\t\t\t\n");
      out.write("\t\t</td>\n");
      out.write("\t\t<td>");
      out.print( Bean.getHtmlHelpIcon("1", "") );
      out.write("</td>\n");
      out.write("\t</tr>\n");
      out.write("\t\t<tr>\n");
      out.write("\t\t<td>Enter the URL of your Alkacon OpenCms site</td>\t\t\n");
      out.write("\t\t<td>\n");
      out.write("\t\t\t<input type=\"text\" name=\"workplaceSite\" value=\"");
      out.print( serverUrl );
      out.write("\" style=\"width: 150px;\">\n");
      out.write("\t\t</td>\n");
      out.write("\t\t<td>");
      out.print( Bean.getHtmlHelpIcon("3", "") );
      out.write("</td>\n");
      out.write("\t</tr>\n");
      out.write("\t<tr>\n");
      out.write("\t\t<td>Enter a name for your Alkacon OpenCms server</td>\t\t\n");
      out.write("\t\t<td>\n");
      out.write("\t\t\t<input type=\"text\" name=\"serverName\" value=\"");
      out.print( Bean.getServerName() );
      out.write("\" style=\"width: 150px;\">\n");
      out.write("\t\t</td>\n");
      out.write("\t\t<td>");
      out.print( Bean.getHtmlHelpIcon("2", "") );
      out.write("</td>\n");
      out.write("\t</tr>\n");
      out.write("</table>\n");
      out.print( Bean.getHtmlPart("C_BLOCK_END") );
      out.write("\n");
      out.write("\n");
      out.write("</td></tr></table>\n");
      out.write("\n");
      out.print( Bean.getHtmlPart("C_CONTENT_END") );
      out.write('\n');
      out.write('\n');
      out.print( Bean.getHtmlPart("C_BUTTONS_START") );
      out.write("\n");
      out.write("<input name=\"back\" type=\"button\" value=\"&#060;&#060; Back\" class=\"dialogbutton\" onclick=\"location.href='");
      out.print( prevPage );
      out.write("';\">\n");
      out.write("<input name=\"submit\" type=\"submit\" value=\"Continue &#062;&#062;\" class=\"dialogbutton\">\n");
      out.write("<input name=\"cancel\" type=\"button\" value=\"Cancel\" class=\"dialogbutton\" onclick=\"location.href='index.jsp';\" style=\"margin-left: 50px;\">\n");
      out.write("</form>\n");
      out.print( Bean.getHtmlPart("C_BUTTONS_END") );
      out.write('\n');
      out.write('\n');
      out.print( Bean.getHtmlPart("C_HELP_START", "1") );
      out.write("\n");
      out.write("<b>Why the ethernet address is needed:</b><br>&nbsp;<br>\n");
      out.write("Alkacon OpenCms generates unique keys for all resources based on a \n");
      out.write("128-bit UUID (Universally Unique IDentifier, aka GUID in the Windows world) algorithm.\n");
      out.write("To initialize this algorithm, the ethernet address of the server is required.\n");
      out.write("However, Java has no way of accessing this information from the server hardware \n");
      out.write("because of the sandbox security model.<br>&nbsp;<br>\n");
      out.write("You can leave this field empty, and a random ethernet address will be generated for your OpenCms server.\n");
      out.write("This means there is a <i>very, very, very slight</i> chance that someone else in the universe might create some duplicate keys.<br>&nbsp;<br>\n");
      out.write("<b>Please note:</b> The ethernet (MAC) address is NOT the IP address of the server.\n");
      out.write("A valid MAC ethernet address looks like this: <code>4f:a1:f1:c2:36:bf</code>.\n");
      out.print( Bean.getHtmlPart("C_HELP_END") );
      out.write('\n');
      out.write('\n');
      out.print( Bean.getHtmlPart("C_HELP_START", "2") );
      out.write("\n");
      out.write("<b>The server name:</b><br>&nbsp;<br>\n");
      out.write("This server name will be used for various log messages in OpenCms.<br>&nbsp;<br>\n");
      out.write("This can be handy if you have to compare logfiles from a couple of different servers.\n");
      out.print( Bean.getHtmlPart("C_HELP_END") );
      out.write('\n');
      out.write('\n');
      out.print( Bean.getHtmlPart("C_HELP_START", "3") );
      out.write("\n");
      out.write("<b>The OpenCms site URL:</b><br>&nbsp;<br>\n");
      out.write("Alkacon OpenCms is capable of managing multiple sites.\n");
      out.write("However, the OpenCms Workplace must always be accessed through one specific URL.<br>&nbsp;<br>\n");
      out.write("The site URL you enter here will be used <i>both</i> as URL to access the Workplace,\n");
      out.write("and as URL for the default site. In case you want to add other sites, or if you want to use different URLs\n");
      out.write("for default site and Workplace, you must\n");
      out.write("manually edit the <code>opencms-system.xml</code> file after the installation.\n");
      out.print( Bean.getHtmlPart("C_HELP_END") );
      out.write('\n');
      out.write('\n');
 } else	{ 
      out.write('\n');
      out.print( Bean.displayError(""));
      out.write('\n');
      out.print( Bean.getHtmlPart("C_CONTENT_END") );
      out.write('\n');
 } 
      out.write('\n');
      out.print( Bean.getHtmlPart("C_HTML_END") );
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
