/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.27
 * Generated at: 2015-01-20 03:03:11 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.setup;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import org.opencms.setup.*;
import java.util.*;

public final class step_005f5_005fdatabase_005fcreation_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      org.opencms.setup.CmsSetupBean Bean = null;
      synchronized (session) {
        Bean = (org.opencms.setup.CmsSetupBean) _jspx_page_context.getAttribute("Bean", javax.servlet.jsp.PageContext.SESSION_SCOPE);
        if (Bean == null){
          Bean = new org.opencms.setup.CmsSetupBean();
          _jspx_page_context.setAttribute("Bean", Bean, javax.servlet.jsp.PageContext.SESSION_SCOPE);
        }
      }
      org.apache.jasper.runtime.JspRuntimeLibrary.introspect(_jspx_page_context.findAttribute("Bean"), request);


	// next page 
	String nextPage = "step_6_module_selection.jsp";	
	// previous page 
	String prevPage = "step_3_database_selection.jsp";

	CmsSetupDb db = null;

	boolean createDb = false;
	boolean createTables = false;
	boolean dbExists = false;
	boolean dropDb = false;

	if (Bean.isInitialized()) {
		String temp;
		Object a;
		if ((a = session.getAttribute("createDb")) != null) {
			createDb = "true".equals(a.toString());
		}
		if (((a = session.getAttribute("createTables")) != null) && (a.toString().length() > 0)) {
			createTables = "true".equals(a.toString());
	    } else {
			// if not explicitly set, we will certainly create the
			// tables when creating a new database
	    	createTables = createDb;
	    }
		if(createDb || createTables)	{
			db = new CmsSetupDb(Bean.getWebAppRfsPath());
			temp = request.getParameter("dropDb");
			dropDb = (temp != null) && "Yes".equals(temp);
			if (Bean.getDatabase().startsWith("db2") || Bean.getDatabase().startsWith("as400")) {
			    dbExists = true;
			    dropDb = true;
			    createDb = false;
			}
			/* check if database exists */
			if(!dropDb)	{
			    if (Bean.getDatabase().startsWith("oracle") || Bean.getDatabase().startsWith("db2") || Bean.getDatabase().startsWith("as400")) {
					db.setConnection(Bean.getDbDriver(), Bean.getDbWorkConStr(), Bean.getDbConStrParams(), Bean.getDbWorkUser(), Bean.getDbWorkPwd());
				} else {
					db.setConnection(Bean.getDbDriver(), Bean.getDbWorkConStr(), Bean.getDbConStrParams(), Bean.getDbCreateUser(), Bean.getDbCreatePwd());
				}
				dbExists = db.noErrors();
				if(dbExists)	{
					db.closeConnection();
				}
				else	{
					db.clearErrors();
				}
			}
			if( !dbExists || dropDb)	{
                db.closeConnection();
    			if (!Bean.getDatabase().startsWith("db2") && !Bean.getDatabase().startsWith("as400")) {
	    			db.setConnection(Bean.getDbDriver(), Bean.getDbCreateConStr(), Bean.getDbConStrParams(), Bean.getDbCreateUser(), Bean.getDbCreatePwd());
	    		}
			}
			else {
				if (createDb || createTables) {
					nextPage = "step_5_database_creation.jsp";
			  	}
			}
		}
	}
	boolean dbError = false;
	boolean enableContinue = false;
	if(!createDb && !createTables && dbExists)	{
		enableContinue = true;
	}


      out.print( Bean.getHtmlPart("C_HTML_START") );
      out.write("\n");
      out.write("Alkacon OpenCms Setup Wizard\n");
      out.print( Bean.getHtmlPart("C_HEAD_START") );
      out.write('\n');
      out.print( Bean.getHtmlPart("C_STYLES") );
      out.write('\n');
      out.print( Bean.getHtmlPart("C_STYLES_SETUP") );
      out.write('\n');
      out.print( Bean.getHtmlPart("C_HEAD_END") );
      out.write("\n");
      out.write("Alkacon OpenCms Setup Wizard - Create database &amp; tables\n");
      out.print( Bean.getHtmlPart("C_CONTENT_SETUP_START") );
      out.write('\n');
 if (Bean.isInitialized())	{ 
      out.write("\n");
      out.write("<form action=\"");
      out.print( nextPage );
      out.write("\" method=\"post\" class=\"nomargin\">\n");
      out.write("<table border=\"0\" cellpadding=\"5\" cellspacing=\"0\" style=\"width: 100%; height: 350px;\">\n");
      out.write("<tr>\n");
      out.write("\t<td style=\"vertical-align: middle;\">\n");
      out.write("\t\t\t\t");

					if (!createDb && !createTables && !dbExists)	{
						enableContinue = true;
						
      out.write("\n");
      out.write("\t\t\t\t\t\t");
      out.print( Bean.getHtmlPart("C_BLOCK_START", "Create Database") );
      out.write("\n");
      out.write("\t\t\t\t\t\t<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n");
      out.write("\t\t\t\t\t\t\t<tr>\n");
      out.write("\t\t\t\t\t\t\t\t<td><img src=\"resources/warning.png\" border=\"0\"></td>\n");
      out.write("\t\t\t\t\t\t\t\t<td>&nbsp;&nbsp;</td>\n");
      out.write("\t\t\t\t\t\t\t\t<td>You have not created the Alkacon OpenCms database.<br>\n");
      out.write("\t\t\t\t\t\t\t\t\tYou cannot import the modules successfully without the database and tables!\n");
      out.write("\t\t\t\t\t\t\t\t</td>\n");
      out.write("\t\t\t\t\t\t\t</tr>\n");
      out.write("\t\t\t\t\t\t</table>\n");
      out.write("\t\t\t\t\t\t");
      out.print( Bean.getHtmlPart("C_BLOCK_END") );
      out.write("\n");
      out.write("\t\t\t\t\t\t");

					}
					else {
						if (dbExists && createTables && !dropDb && db != null)	{
							db.closeConnection(); 
      out.write("\n");
      out.write("\t\t\t\t\t\t\t");
      out.print( Bean.getHtmlPart("C_BLOCK_START", "Create Database") );
      out.write("\n");
      out.write("\t\t\t\t\t\t\t<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n");
      out.write("\t\t\t\t\t\t\t\t<tr>\n");
      out.write("\t\t\t\t\t\t\t\t\t<td><img src=\"resources/warning.png\" border=\"0\"></td>\n");
      out.write("\t\t\t\t\t\t\t\t\t<td>&nbsp;&nbsp;</td>\n");
      out.write("\t\t\t\t\t\t\t\t\t<td>An existing database has been detected. Drop it ?</td>\n");
      out.write("\t\t\t\t\t\t\t\t</tr>\n");
      out.write("\t\t\t\t\t\t\t\t<tr>\n");
      out.write("\t\t\t\t\t\t\t\t\t<td colspan=\"3\">&nbsp;</td>\n");
      out.write("\t\t\t\t\t\t\t\t</tr>\n");
      out.write("\t\t\t\t\t\t\t\t<tr>\n");
      out.write("\t\t\t\t\t\t\t\t\t<td colspan=\"2\">&nbsp;</td>\n");
      out.write("\t\t\t\t\t\t\t\t\t<td>\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<input type=\"submit\" name=\"dropDb\" class=\"dialogbutton\" style=\"margin-left: 0;\" value=\"Yes\">&nbsp;&nbsp;&nbsp;&nbsp;\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<input type=\"button\" value=\"No\" onClick=\"location.href='step_3_database_selection.jsp';\" class=\"dialogbutton\">\n");
      out.write("\t\t\t\t\t\t\t\t\t</td>\n");
      out.write("\t\t\t\t\t\t\t\t</tr>\n");
      out.write("\t\t\t\t\t\t\t</table>\n");
      out.write("\t\t\t\t\t\t\t");
      out.print( Bean.getHtmlPart("C_BLOCK_END") );
      out.write("\n");
      out.write("\t\t\t\t\t\t\t");

						}
						else	{
							if (createDb && dropDb && db != null)	{
								// Drop Database 
      out.write("\n");
      out.write("\t\t\t\t\t\t\t\t");
      out.print( Bean.getHtmlPart("C_BLOCK_START", "Dropping database ...") );
      out.write("\n");
      out.write("\t\t\t\t\t\t\t\t<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\" style=\"width: 100%;\">\n");
      out.write("\t\t\t\t\t\t\t\t\n");
      out.write("\t\t\t\t\t\t\t\t");

								db.closeConnection();
								db.setConnection(Bean.getDbDriver(), Bean.getDbWorkConStr(), Bean.getDbConStrParams(), Bean.getDbCreateUser(), Bean.getDbCreatePwd());
								db.dropDatabase(Bean.getDatabase(), Bean.getReplacer());
								if (db.noErrors())	{ 
      out.write("\n");
      out.write("\t\t\t\t\t\t\t\t\t<tr>\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<td><img src=\"resources/ok.png\" border=\"0\"></td>\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<td>&nbsp;&nbsp;</td>\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<td style=\"width: 100%;\">Database has been successfully dropped.</td>\n");
      out.write("\t\t\t\t\t\t\t\t\t</tr>\t\t\t\t\t\t\t\t\t\n");
      out.write("\t\t\t\t\t\t\t\t\t");

									enableContinue = true;
								} else {
									enableContinue = false;
									dbError = true;
								 
      out.write("\n");
      out.write("\t\t\t\t\t\t\t\t\t<tr>\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<td><img src=\"resources/error.png\" border=\"0\"></td>\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<td>&nbsp;&nbsp;</td>\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<td style=\"width: 100%;\">\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<div style=\"width: 100%; height:70px; overflow: auto;\">\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<p style=\"margin-bottom: 4px;\">Database could not be dropped!</p>\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t");

											List<String> errors = db.getErrors();
											Iterator<String> it = errors.iterator();
											while (it.hasNext())	{
												out.println(it.next() + "<br>");
												out.println("-------------------------------------------" + "<br>");
											}
											db.clearErrors();
									 		
      out.write("\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t</div>\n");
      out.write("\t\t\t\t\t\t\t\t\t\t</td>\n");
      out.write("\t\t\t\t\t\t\t\t\t</tr>\t\t\t\t\n");
      out.write("\t\t\t\t\t\t\t\t\n");
      out.write("\t\t\t\t\t\t\t\t\t");

						
								} 
      out.write("\n");
      out.write("\t\t\t\t\t\t\t\t</table>\n");
      out.write("\t\t\t\t\t\t\t\t");
      out.print( Bean.getHtmlPart("C_BLOCK_END") );
      out.write("\n");
      out.write("\t\t\t\t\t\t\t\t<div class=\"dialogspacer\" unselectable=\"on\">&nbsp;</div>\n");
      out.write("\t\t\t\t\t\t\t\t\n");
      out.write("\t\t\t\t\t\t\t\t");

							}

							if (createDb && db != null) {
								// Create Database 
      out.write("\n");
      out.write("\t\t\t\t\t\t\t\t");
      out.print( Bean.getHtmlPart("C_BLOCK_START", "Creating database ...") );
      out.write("\n");
      out.write("\t\t\t\t\t\t\t\t<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\" style=\"width: 100%;\">\n");
      out.write("\t\t\t\t\t\t\t\t\n");
      out.write("\t\t\t\t\t\t\t\t");

								db.createDatabase(Bean.getDatabase(), Bean.getReplacer());
								if (db.noErrors())	{ 
      out.write("\n");
      out.write("\t\t\t\t\t\t\t\t\t<tr>\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<td><img src=\"resources/ok.png\" border=\"0\"></td>\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<td>&nbsp;&nbsp;</td>\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<td style=\"width: 100%;\">Database has been successfully created.</td>\n");
      out.write("\t\t\t\t\t\t\t\t\t</tr>\t\t\t\t\t\t\t\t\t\n");
      out.write("\t\t\t\t\t\t\t\t\t");

									enableContinue = true;
								} else { 
									enableContinue = false;
									dbError = true;
								
      out.write("\n");
      out.write("\t\t\t\t\t\t\t\t\t<tr>\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<td><img src=\"resources/error.png\" border=\"0\"></td>\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<td>&nbsp;&nbsp;</td>\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<td style=\"width: 100%;\">\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<div style=\"width: 100%; height:70px; overflow: auto;\">\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<p style=\"margin-bottom: 4px;\">Database could not be created!</p>\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t");

											List<String> errors = db.getErrors();
											Iterator<String> it = errors.iterator();
											while (it.hasNext())	{
												out.println(it.next() + "<br>");
												out.println("-------------------------------------------" + "<br>");
											}
											db.clearErrors();
									 		
      out.write("\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t</div>\n");
      out.write("\t\t\t\t\t\t\t\t\t\t</td>\n");
      out.write("\t\t\t\t\t\t\t\t\t</tr>\t\t\t\t\n");
      out.write("\t\t\t\t\t\t\t\t\t");

								}
								
      out.write("\n");
      out.write("\t\t\t\t\t\t\t\t</table>\n");
      out.write("\t\t\t\t\t\t\t\t");
      out.print( Bean.getHtmlPart("C_BLOCK_END") );
      out.write("\n");
      out.write("\t\t\t\t\t\t\t\t<div class=\"dialogspacer\" unselectable=\"on\">&nbsp;</div>\n");
      out.write("\t\t\t\t\t\t\t\t");

							}
							if (db != null) {
								db.closeConnection();
							}
							if (createTables && db != null) {
								db.setConnection(Bean.getDbDriver(), Bean.getDbWorkConStr(), Bean.getDbConStrParams(), Bean.getDbWorkUser(),Bean.getDbWorkPwd());
								//Drop Tables (intentionally quiet)
								db.dropTables(Bean.getDatabase());
								db.clearErrors();
								db.closeConnection();

								// reopen the connection in order to display errors
								db.setConnection(Bean.getDbDriver(), Bean.getDbWorkConStr(), Bean.getDbConStrParams(), Bean.getDbWorkUser(),Bean.getDbWorkPwd());
				
								//Create Tables 
      out.write("\n");
      out.write("\t\t\t\t\t\t\t\t\n");
      out.write("\t\t\t\t\t\t\t\t");
      out.print( Bean.getHtmlPart("C_BLOCK_START", "Creating tables ...") );
      out.write("\n");
      out.write("\t\t\t\t\t\t\t\t<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\" style=\"width: 100%;\">\n");
      out.write("\t\t\t\t\t\t\t\t");

								db.createTables(Bean.getDatabase(), Bean.getReplacer());
								if(db.noErrors())	{
									
      out.write("\n");
      out.write("\t\t\t\t\t\t\t\t\t<tr>\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<td><img src=\"resources/ok.png\" border=\"0\"></td>\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<td>&nbsp;&nbsp;</td>\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<td style=\"width: 100%;\">Tables have been successfully created.</td>\n");
      out.write("\t\t\t\t\t\t\t\t\t</tr>\t\t\t\t\t\t\t\t\t\n");
      out.write("\t\t\t\t\t\t\t\t\t");

									enableContinue = true;
								}
								else	{ 
									enableContinue = false;
									dbError = true;
								
      out.write("\n");
      out.write("\t\t\t\t\t\t\t\t\n");
      out.write("\t\t\t\t\t\t\t\t\t<tr>\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<td><img src=\"resources/error.png\" border=\"0\"></td>\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<td>&nbsp;&nbsp;</td>\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<td style=\"width: 100%;\">\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<div style=\"width: 100%; height:70px; overflow: auto;\">\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<p style=\"margin-bottom: 4px;\">Tables could not be created!</p>\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t");

											List<String> errors = db.getErrors();
											Iterator<String> it = errors.iterator();
											while (it.hasNext())	{
												out.println(it.next() + "<br>");
												out.println("-------------------------------------------" + "<br>");
											}
											db.clearErrors();
											db.closeConnection();
									 		
      out.write("\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t</div>\n");
      out.write("\t\t\t\t\t\t\t\t\t\t</td>\n");
      out.write("\t\t\t\t\t\t\t\t\t</tr>\t\t\t\t\n");
      out.write("\t\t\t\t\t\t\t\t\t");

								}
								
      out.write("\n");
      out.write("\t\t\t\t\t\t\t\t</table>\n");
      out.write("\t\t\t\t\t\t\t\t");
      out.print( Bean.getHtmlPart("C_BLOCK_END") );
      out.write("\n");
      out.write("\t\t\t\t\t\t\t\t");

							}
						}
					}
				
      out.write("\n");
      out.write("\t</td>\n");
      out.write("</tr>\n");
      out.write("</table>\n");
      out.print( Bean.getHtmlPart("C_CONTENT_END") );
      out.write('\n');
      out.write('\n');
      out.print( Bean.getHtmlPart("C_BUTTONS_START") );
      out.write("\n");
      out.write("<input name=\"back\" type=\"button\" value=\"&#060;&#060; Back\" class=\"dialogbutton\" onclick=\"location.href='");
      out.print( prevPage );
      out.write("';\">\n");
      out.write("<input name=\"btcontinue\" type=\"submit\" value=\"Continue &#062;&#062;\" class=\"dialogbutton\" disabled=\"disabled\" id=\"btcontinue\">\n");
      out.write("<input name=\"cancel\" type=\"button\" value=\"Cancel\" class=\"dialogbutton\" onclick=\"location.href='index.jsp';\" style=\"margin-left: 50px;\">\n");
      out.write("</form>\n");
 
  if (db != null) {
     db.closeConnection();
  }
  if (enableContinue && !dbError)	{
	out.println("<script type=\"text/javascript\">\ndocument.getElementById(\"btcontinue\").disabled = false;\n</script>");
} 
      out.write('\n');
      out.print( Bean.getHtmlPart("C_BUTTONS_END") );
      out.write('\n');
 } else	{ 
      out.write('\n');
      out.print( Bean.displayError(""));
      out.write('\n');
      out.print( Bean.getHtmlPart("C_CONTENT_END") );
      out.write('\n');
 } 
      out.write('\n');
      out.print( Bean.getHtmlPart("C_HTML_END") );
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
